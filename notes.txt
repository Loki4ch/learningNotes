// JavaScript Basics

Подытожим: пока очень желательно добавлять "use strict"; в начале ваших скриптов. Позже, когда весь ваш код будет состоять из классов и модулей, директиву можно будет опускать.

Результатом вызова typeof null является "object". Это официально признанная ошибка в typeof, ведущая начало с времён создания JavaScript и сохранённая для совместимости. Конечно, null не является объектом. Это специальное значение с отдельным типом.

Вызов typeof alert возвращает "function", потому что alert является функцией. Мы изучим функции в следующих главах, где заодно увидим, что в JavaScript нет специального типа «функция». Функции относятся к объектному типу. Но typeof обрабатывает их особым образом, возвращая "function". Так тоже повелось от создания JavaScript. Формально это неверно, но может быть удобным на практике.

Составное присваивание += *= /=

в условиях && запинается на первом false а или на первом тру 
выводит последний тру если все тру ЭТО В && а в 

в let x = y = 2 будет 2 

ВСЕГДА ИСПОЛЬЗОВАТЬ === тройное

Falsy значения ложные 6 штук null undef ""

continue переходит на следующий шаг итерации. И break в циклах